# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        
        l1_nums = []
        while l1:
            l1_nums.append(l1.val)
            l1 = l1.next
            
        l2_nums = []
        while l2:
            l2_nums.append(l2.val)
            l2 = l2.next
            
        head = None
        carry = 0
        while l1_nums and l2_nums:
            sum_nums = l1_nums.pop() + l2_nums.pop() + carry
            tmp = head
            head = ListNode(sum_nums%10)
            carry = int(sum_nums/10)
            head.next = tmp
            
        rem_nums = []
        if l1_nums:
            rem_nums = l1_nums
        elif l2_nums:
            rem_nums = l2_nums
        
        while rem_nums:
            sum_nums = rem_nums.pop() + carry
            tmp = head
            head = ListNode(sum_nums%10)
            carry = int(sum_nums/10)
            head.next = tmp
            
        if carry:
            tmp = head
            head = ListNode(carry)
            head.next = tmp
                
        return head
        
